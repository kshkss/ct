#!/usr/bin/python3

import os
import argparse
import numpy as np
import tifffile as tiff
#import tqdm

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("method", help="Choose a method from min, max, mean, and median")
    parser.add_argument("-o", "--output", help="A file name for output", default="output.tif")
    parser.add_argument("input_dir")
    args = parser.parse_args()

    #print(args.input_dir)
    #print(args.output)

    dirname = args.input_dir
    filename = args.output

    assert (os.path.exists(dirname) and os.path.isdir(dirname)), ("Input directory does not exist: {}".format(dirname))
    assert (not os.path.exists(filename) or not os.path.isdir(filename)), ("Directory exists: {}".format(filename))

    files = os.listdir(dirname)
    files.sort()

    images = np.stack([tiff.imread(os.path.join(dirname, file_)) for file_ in files])
    if args.method == 'min':
        out = np.min(images, axis=0)
    elif args.method == 'max':
        out = np.max(images, axis=0)
    elif args.method == 'mean':
        out = np.mean(images, axis=0)
    elif args.method == 'median':
        out = np.median(images, axis=0, overwrite_input=True)

    tiff.imwrite(filename, out.astype(np.float32), compress=6)

if __name__ == "__main__":
    main()

